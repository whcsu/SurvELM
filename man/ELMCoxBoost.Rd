% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ELMCoxBoost.R
\name{ELMCoxBoost}
\alias{ELMCoxBoost}
\title{SurvELM ELMCoxBoost}
\usage{
ELMCoxBoost(x, y, Kernel_type = "lin_kernel", Kernel_para = c(2, 1), ...)
}
\arguments{
\item{x}{The covariates(predictor variables) of training data.}

\item{y}{Survival time and censored status of training data. Must be a Surv  \code{survival} object}

\item{Kernel_type}{Type of kernel matrix. Currently four options avaibable. "RBF_kernel",a RBF kernel;"lin_kernel" , a linear kernel;poly_kernel ,a polynomial kernel;sigmoid_kernel, a sigmoid kernel. Default is "lin_kernel".}

\item{Kernel_para}{Parameters for different types of kernels. A single value for RBF and linear kernels. A vector for polynomial and sigmoid kernels and progam stops if only a single value is supplied. However, if the vector of values is supplied in the cases of RBF and liner kernels, only the first value will be used. Default is a vector value "c(2,1)".}

\item{...}{Additional arguments for CoxBoost.}
}
\value{
Object of class \code{ELMCoxBoost} with elements
  \tabular{ll}{
      \code{elmcoxboost}    \tab  A CoxBoost model. See \code{CoxBoost} for details. \cr
      \code{trainx} \tab  Training data covariates. \cr
         \code{kerneltype} \tab  Type of kernel matrix used in training. kerneltype=1,a RBF kernel;kerneltype=2 , a linear kernel;kerneltype=3 ,a polynomial kernel;kerneltype=4, a sigmoid kernel. \cr
  \code{Kernel_para} \tab  Parameters used in training. A single value for kerneltype=1 or 2. A vector for kerneltype=3 or 4. \cr
  }
}
\description{
An Extreme Learning Machine Cox  Model with Likelihood Based Boosting
}
\examples{
set.seed(123)
library(SurvELM)
library(survival)
#Lung DATA
data(lung)
lung=na.omit(lung)
lung[,3]=lung[,3]-1
n=dim(lung)[1]
L=sample(1:n,ceiling(n*0.5))
trset<-lung[L,]
teset<-lung[-L,]
rii=c(2,3)
elmsurvmodel=ELMCoxBoost(x=trset[,-rii],y=Surv(trset[,rii[1]], trset[,rii[2]]))
#THE predicted linear predictor
testpre=predict(elmsurvmodel,teset[,-c(rii)])
#The predicted cumulative incidence function
testprecif=predict(elmsurvmodel,teset[,-c(rii)],type="CIF")
# The predicted partial log-likelihood
testprellk=predict(elmsurvmodel,teset[,-c(rii)],newtime=teset[,rii[1]],
newstatus=teset[,rii[2]],type="logplik")
uniquetimes=sort(unique(trset$time))
# The predicted probability of not yet having had the event at the time points given in times
testprerisk=predict(elmsurvmodel,teset[,-c(rii)],times=uniquetimes,type="risk")
}
\seealso{
\code{\link{CoxBoost}}
}
\author{
Hong Wang
}
